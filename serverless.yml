org: mirandasalazar
service: api-album

provider:
  name: aws
  runtime: python3.12
  memorySize: 512
  timeout: 29
  iam:
    role: arn:aws:iam::060098569939:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_album

plugins:
  - serverless-aws-documentation

custom:
  documentation:
    api:
      info:
        version: '1.0'
        title: API de Álbumes
        description: API para gestionar álbumes musicales
    models:
      - name: AlbumModel
        contentType: application/json
        schema:
          type: object
          properties:
            artist_id:
              type: string
              description: ID único del artista
            album_uuid:
              type: string
              description: UUID único del álbum
            date:
              type: string
              description: Fecha del álbum en formato ISO8601
            genre:
              type: string
              description: Género musical del álbum

functions:
  getAlbums:
    handler: albumQuery.lambda_handler
    events:
      - http:
          path: albums
          method: get
          documentation:
            summary: Obtener lista de álbumes
            description: Recupera álbumes almacenados, con posibilidad de filtrado por género o ID de artista.
            queryParams:
              - name: genre
                description: Género musical para filtrar álbumes
                required: false
                schema:
                  type: string
              - name: artist_id
                description: ID del artista para filtrar álbumes
                required: false
                schema:
                  type: string
            responses:
              '200':
                description: Lista de álbumes recuperada con éxito
                bodyType: AlbumModel
              '400':
                description: Parámetros inválidos proporcionados
              '404':
                description: No se encontraron álbumes
              '500':
                description: Error interno del servidor o error en la base de datos

  deleteAlbum:
    handler: deleteAlbum.lambda_handler
    events:
      - http:
          path: albums
          method: delete
          documentation:
            summary: Eliminar un álbum
            description: Elimina un álbum específico mediante su UUID
            requestBody:
              description: UUID del álbum a eliminar
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      album_uuid:
                        type: string
                        description: UUID del álbum a eliminar
            responses:
              '200':
                description: Ábum eliminado correctamente
              '400':
                description: Datos inválidos proporcionados
              '404':
                description: Álbum no encontrado
              '500':
                description: Error interno del servidor o error en la base de datos

  postAlbum:
    handler: postAlbum.lambda_handler
    events:
      - http:
          path: albums
          method: post
          documentation:
            summary: Crear un nuevo álbum
            description: Añade un nuevo álbum a la base de datos
            requestBody:
              description: Datos del álbum a agregar
              required: true
              content:
                application/json:
                  schema:
                    $ref: '#/custom/documentation/models/AlbumModel'
            responses:
              '201':
                description: Álbum creado exitosamente
              '400':
                description: Datos inválidos proporcionados
              '404':
                description: Álbum no encontrado
              '500':
                description: Error interno del servidor o error en la base de datos

resources:
  Resources:
    AlbumTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: artist_id
            AttributeType: S
          - AttributeName: date#genre
            AttributeType: S
          - AttributeName: album_uuid
            AttributeType: S
        KeySchema:
          - AttributeName: artist_id
            KeyType: HASH
          - AttributeName: date#genre
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: UUIDIndex
            KeySchema:
              - AttributeName: album_uuid
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        LocalSecondaryIndexes:
          - IndexName: Artist_DateIndex
            KeySchema:
              - AttributeName: artist_id
                KeyType: HASH
              - AttributeName: date#genre
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        BillingMode: PAY_PER_REQUEST
